apply plugin: 'java'
apply plugin: 'eclipse'

// tag::repositories[]
repositories { 
    mavenCentral() 
}
// end::repositories[]

// tag::jar[]
jar {
    baseName = 'PDPComponentServioticy'
    version =  '0.2.0'
}
// end::jar[]

// tag::dependencies[]
dependencies {
    compile "joda-time:joda-time:2.2"
     compile 'com.fasterxml.jackson.core:jackson-core:2.3.0'
     compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.3.0'
     compile 'com.fasterxml.jackson.core:jackson-databind:2.3.'
     compile 'com.jayway.jsonpath:json-path:0.9.1'
    
     compile 'org.apache.httpcomponents:httpclient:4.3.1'
     
     compile('org.springframework:spring-web:4.0.1.RELEASE')
     
     //test
     testCompile 'org.springframework:spring-test:3.2.3.RELEASE'
     testCompile 'junit:junit:4.10'
     
  	 testCompile 'commons-codec:commons-codec:1.10'
  	 testCompile 'com.fasterxml.jackson.core:jackson-core:2.3.0'
  	 testCompile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.3.0'
  	 testCompile 'org.bouncycastle:bcprov-jdk15on:1.52'
     
     
     //testCompile 'org.springframework:spring-test'
     //testCompile 'junit:junit'
     
     //one time password update
  	 compile files('./src/main/resources/lib/IoTP-0.1.0.jar')

}
// end::dependencies[]

test{
 exclude 'de/passau/uni/sec/compose/pdp/servioticy/idm/TestIDMCommunicator**'
 exclude 'de/passau/uni/sec/compose/pdp/servioticy/TestOTP**'
}
// tag::wrapper[]
task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
// end::wrapper[]

//for inclusion in servioticy
apply plugin: 'maven'
configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId 'de.passau.uni'
        artifactId 'servioticy-pdp'
        packaging 'jar'
        version  jar['version']
    }
}
